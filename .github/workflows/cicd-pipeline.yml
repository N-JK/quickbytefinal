name: CI/CD Pipeline

on:
  push:
    branches:
      - master  # Adjust this to your main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repository\
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Step 3: Login to DockerHub
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Build and push the Docker image to 
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: nibin42/quickbyte:${{ github.sha }}

    # Step 5: Deploy to EC2 and run the containers
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: "ubuntu"
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          # Stop and remove running containers on port 8000
          containers=$(docker ps -q --filter publish=8000)
          if [ -n "$containers" ]; then
            docker stop $containers
            docker rm $containers
          fi

          # Pull the new image
          docker pull nibin42/quickbyte:${{ github.sha }}

          # Stop and remove the existing container
          if docker ps -a --format '{{.Names}}' | grep -q '^quickbyte$'; then
            docker stop quickbyte
            docker rm quickbyte
          fi

          # Run the new container
          docker run -d --name quickbyte -p 8000:8000 nibin42/quickbyte:${{ github.sha }}

          # Clean up unused Docker resources
          docker system prune -af